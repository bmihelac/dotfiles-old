source ~/.vim/vimrc

" syntax for multiple tag files are
" set tags=/my/dir1/tags, /my/dir2/tags
"set tags=./tags;$HOME/.vim/tags/ "recursively searches directory for 'tags' file

" TagList Plugin Configuration
"let Tlist_Ctags_Cmd='/usr/bin/ctags' " point taglist to ctags
let Tlist_GainFocus_On_ToggleOpen = 1      " Focus on the taglist when its toggled
let Tlist_Close_On_Select = 1              " Close when something's selected
let Tlist_Use_Right_Window = 1             " Project uses the left window
let Tlist_File_Fold_Auto_Close = 1         " Close folds for inactive files
let Tlist_Show_Menu = 1

map <F3> :NERDTreeToggle<CR>
map <F4> :TlistToggle<CR>
map <F2> :marks

:set guioptions-=T  "remove toolbar

" Change to directory of the opened file
command! CD cd %:p:h

" Activate the snippets
autocmd FileType python set ft=python.django " For SnipMate
autocmd FileType html set ft=htmldjango.html " For SnipMate
autocmd FileType xhtml set ft=htmldjango.html " For SnipMate

" Tidy
"setlocal makeprg=tidy\ -quiet\ -errors\ %
"setlocal errorformat=line\ %l\ column\ %v\ -\ %m

" for CSS, also have things in braces indented:
autocmd FileType css set smartindent
" for HTML, generally format text, but if a long line has been created
" leave it alone when editing:
autocmd FileType html set formatoptions+=tl
" for both CSS and HTML, use genuine tab characters for 
" indentation, to make files a few bytes smaller:
autocmd FileType js,html,css,htmldjango.html set noexpandtab tabstop=4

" line numbers
:nmap <C-N><C-N> :set invnumber<CR>

" ignore
:set wildignore=*.o,*~,*.pyc

" Textmate fuzzyfinder
map <leader>t :FuzzyFinderTextMate<CR>
let g:fuzzy_ignore="*.pyc,*~"
