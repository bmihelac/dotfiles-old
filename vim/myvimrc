call pathogen#runtime_append_all_bundles() 

source ~/.vim/vimrc
source ~/.vim/activate_django.vim

" syntax for multiple tag files are
" set tags=/my/dir1/tags, /my/dir2/tags
"set tags=./tags;$HOME/.vim/tags/ "recursively searches directory for 'tags' file

" TagList Plugin Configuration
"let Tlist_Ctags_Cmd='/usr/bin/ctags' " point taglist to ctags
let Tlist_GainFocus_On_ToggleOpen = 1      " Focus on the taglist when its toggled
let Tlist_Close_On_Select = 1              " Close when something's selected
let Tlist_Use_Right_Window = 1             " Project uses the left window
let Tlist_File_Fold_Auto_Close = 1         " Close folds for inactive files
let Tlist_Show_Menu = 1

map <F3> :NERDTreeToggle<CR>
map <F4> :TlistToggle<CR>
map <F2> :marks

:set guioptions-=T  "remove toolbar

" Change to directory of the opened file
command! CD cd %:p:h

" Activate the snippets
autocmd FileType python set ft=python.django " For SnipMate
autocmd FileType html set ft=htmldjango.html " For SnipMate
autocmd FileType xhtml set ft=htmldjango.html " For SnipMate

" Tidy
"setlocal makeprg=tidy\ -quiet\ -errors\ %
"setlocal errorformat=line\ %l\ column\ %v\ -\ %m

" for CSS, also have things in braces indented:
autocmd FileType css set smartindent
" for HTML, generally format text, but if a long line has been created
" leave it alone when editing:
autocmd FileType html set formatoptions+=tl
" for both CSS and HTML, use genuine tab characters for 
" indentation, to make files a few bytes smaller:
autocmd FileType html,htmldjango set et sw=2 sts=2 ts=2
autocmd FileType python set ai ts=4 sts=4 et sw=4
autocmd FileType javascript,scss,css set ai et ts=2 sts=2 sw=2

" line numbers
:nmap <F9> :set invnumber<CR>

" ignore
:set wildignore=*.o,*~,*.pyc

" command-t
map <C-F> :CommandT<CR>
map <C-F6> :CommandTFlush<CR>
let g:fuzzy_ignore="*.pyc,*~,tmp/*"

"NerdTREE mapings
:map <F5> :NERDTreeFind<CR>

" Auto reload changed files
:set autoread

" map shift+enter to add new line below current staying in normal mode 
map <S-Enter> o<Esc>

" smart ignorecase
:set smartcase

" map cmd-] and cmd-[ to next/prev tab
" TODO: test in ubuntu
nmap <D-[> gT
nmap <D-]> gt
map <D-1> 1gt
map <D-2> 2gt
map <D-3> 3gt
map <D-4> 4gt
map <D-5> 5gt
map <D-6> 6gt
map <D-7> 7gt
map <D-8> 8gt
map <D-9> 9gt
map <silent><A-Right> :tabnext<CR> 
map <silent><A-Left> :tabprevious<CR> 

"toggle search options
:map <D-F5> :set invincsearch<CR>
:nmap <silent> ,/ :nohlsearch<CR>

"copy current file name to register
:nmap cp :let @+ = expand('%:t')<CR>

"Map leader to ,
let mapleader = ","

" Scroll the viewport faster
nnoremap <C-e> 3<C-e>
nnoremap <C-y> 3<C-y>

set visualbell           " don't beep
set noerrorbells         " don't beep

" Use Q for formatting the current paragraph (or selection)
vmap Q gq
nmap Q gqap

" Easy window navigation
map <C-h> <C-w>h
map <C-j> <C-w>j
map <C-k> <C-w>k
map <C-l> <C-w>l

" disable backups
set nobackup
set noswapfile

" highlights the background in a subtle red for text that goes over the 80
set cc=80

"yankring
:nnoremap <silent> <F10> :YRShow<CR>

" replace the current word with the last yanked text
nnoremap S "_diwP

" rest headings
let @q='yypVr='
let @w='yypVr-'
let @e='yypVr^'

autocmd FileType python set omnifunc=pythoncomplete#Complete

map <silent> <F12> :let @+=@"<CR>

" Run the current buffer as Python code
fu! DoRunPyBuffer2()
    pclose! " force preview window closed
    setlocal ft=python

    " copy the buffer into a new window, then run that buffer through python
    sil %y a | below new | sil put a | sil %!python -
    " indicate the output window as the current previewwindow
    setlocal previewwindow ro nomodifiable nomodified

    " back into the original window
    winc p
endfu

command! RunPyBuffer call DoRunPyBuffer2()
map <Leader>p :RunPyBuffer<CR>

" sudo & write
cmap w!! w !sudo tee % >/dev/null

if has("terminfo")
  set t_Co=16
  set t_AB=[%?%p1%{8}%<%t%p1%{40}%+%e%p1%{92}%+%;%dm
  set t_AF=[%?%p1%{8}%<%t%p1%{30}%+%e%p1%{82}%+%;%dm
  let g:CSApprox_loaded = 1
end

" MacVim
if has("gui_macvim")
    set guifont=Inconsolata:h14
endif

